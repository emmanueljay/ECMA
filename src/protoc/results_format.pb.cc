// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: results_format.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "results_format.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ecma_protoc {

namespace {

const ::google::protobuf::Descriptor* Simu_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Simu_reflection_ = NULL;
const ::google::protobuf::Descriptor* Simu_PhoneNumber_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Simu_PhoneNumber_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Simu_PhoneType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* Results_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Results_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_results_5fformat_2eproto() {
  protobuf_AddDesc_results_5fformat_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "results_format.proto");
  GOOGLE_CHECK(file != NULL);
  Simu_descriptor_ = file->message_type(0);
  static const int Simu_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Simu, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Simu, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Simu, email_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Simu, phones_),
  };
  Simu_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Simu_descriptor_,
      Simu::default_instance_,
      Simu_offsets_,
      -1,
      -1,
      -1,
      sizeof(Simu),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Simu, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Simu, _is_default_instance_));
  Simu_PhoneNumber_descriptor_ = Simu_descriptor_->nested_type(0);
  static const int Simu_PhoneNumber_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Simu_PhoneNumber, number_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Simu_PhoneNumber, type_),
  };
  Simu_PhoneNumber_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Simu_PhoneNumber_descriptor_,
      Simu_PhoneNumber::default_instance_,
      Simu_PhoneNumber_offsets_,
      -1,
      -1,
      -1,
      sizeof(Simu_PhoneNumber),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Simu_PhoneNumber, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Simu_PhoneNumber, _is_default_instance_));
  Simu_PhoneType_descriptor_ = Simu_descriptor_->enum_type(0);
  Results_descriptor_ = file->message_type(1);
  static const int Results_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Results, simu_),
  };
  Results_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Results_descriptor_,
      Results::default_instance_,
      Results_offsets_,
      -1,
      -1,
      -1,
      sizeof(Results),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Results, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Results, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_results_5fformat_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Simu_descriptor_, &Simu::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Simu_PhoneNumber_descriptor_, &Simu_PhoneNumber::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Results_descriptor_, &Results::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_results_5fformat_2eproto() {
  delete Simu::default_instance_;
  delete Simu_reflection_;
  delete Simu_PhoneNumber::default_instance_;
  delete Simu_PhoneNumber_reflection_;
  delete Results::default_instance_;
  delete Results_reflection_;
}

void protobuf_AddDesc_results_5fformat_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024results_format.proto\022\013ecma_protoc\"\325\001\n\004"
    "Simu\022\014\n\004name\030\001 \001(\t\022\n\n\002id\030\002 \001(\005\022\r\n\005email\030"
    "\003 \001(\t\022-\n\006phones\030\004 \003(\0132\035.ecma_protoc.Simu"
    ".PhoneNumber\032H\n\013PhoneNumber\022\016\n\006number\030\001 "
    "\001(\t\022)\n\004type\030\002 \001(\0162\033.ecma_protoc.Simu.Pho"
    "neType\"+\n\tPhoneType\022\n\n\006MOBILE\020\000\022\010\n\004HOME\020"
    "\001\022\010\n\004WORK\020\002\"*\n\007Results\022\037\n\004simu\030\001 \003(\0132\021.e"
    "cma_protoc.Simub\006proto3", 303);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "results_format.proto", &protobuf_RegisterTypes);
  Simu::default_instance_ = new Simu();
  Simu_PhoneNumber::default_instance_ = new Simu_PhoneNumber();
  Results::default_instance_ = new Results();
  Simu::default_instance_->InitAsDefaultInstance();
  Simu_PhoneNumber::default_instance_->InitAsDefaultInstance();
  Results::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_results_5fformat_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_results_5fformat_2eproto {
  StaticDescriptorInitializer_results_5fformat_2eproto() {
    protobuf_AddDesc_results_5fformat_2eproto();
  }
} static_descriptor_initializer_results_5fformat_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

const ::google::protobuf::EnumDescriptor* Simu_PhoneType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Simu_PhoneType_descriptor_;
}
bool Simu_PhoneType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Simu_PhoneType Simu::MOBILE;
const Simu_PhoneType Simu::HOME;
const Simu_PhoneType Simu::WORK;
const Simu_PhoneType Simu::PhoneType_MIN;
const Simu_PhoneType Simu::PhoneType_MAX;
const int Simu::PhoneType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Simu_PhoneNumber::kNumberFieldNumber;
const int Simu_PhoneNumber::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Simu_PhoneNumber::Simu_PhoneNumber()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ecma_protoc.Simu.PhoneNumber)
}

void Simu_PhoneNumber::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Simu_PhoneNumber::Simu_PhoneNumber(const Simu_PhoneNumber& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ecma_protoc.Simu.PhoneNumber)
}

void Simu_PhoneNumber::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
}

Simu_PhoneNumber::~Simu_PhoneNumber() {
  // @@protoc_insertion_point(destructor:ecma_protoc.Simu.PhoneNumber)
  SharedDtor();
}

void Simu_PhoneNumber::SharedDtor() {
  number_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Simu_PhoneNumber::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Simu_PhoneNumber::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Simu_PhoneNumber_descriptor_;
}

const Simu_PhoneNumber& Simu_PhoneNumber::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_results_5fformat_2eproto();
  return *default_instance_;
}

Simu_PhoneNumber* Simu_PhoneNumber::default_instance_ = NULL;

Simu_PhoneNumber* Simu_PhoneNumber::New(::google::protobuf::Arena* arena) const {
  Simu_PhoneNumber* n = new Simu_PhoneNumber;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Simu_PhoneNumber::Clear() {
  number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
}

bool Simu_PhoneNumber::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ecma_protoc.Simu.PhoneNumber)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string number = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_number()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->number().data(), this->number().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ecma_protoc.Simu.PhoneNumber.number"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }

      // optional .ecma_protoc.Simu.PhoneType type = 2;
      case 2: {
        if (tag == 16) {
         parse_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::ecma_protoc::Simu_PhoneType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ecma_protoc.Simu.PhoneNumber)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ecma_protoc.Simu.PhoneNumber)
  return false;
#undef DO_
}

void Simu_PhoneNumber::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ecma_protoc.Simu.PhoneNumber)
  // optional string number = 1;
  if (this->number().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->number().data(), this->number().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ecma_protoc.Simu.PhoneNumber.number");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->number(), output);
  }

  // optional .ecma_protoc.Simu.PhoneType type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // @@protoc_insertion_point(serialize_end:ecma_protoc.Simu.PhoneNumber)
}

::google::protobuf::uint8* Simu_PhoneNumber::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ecma_protoc.Simu.PhoneNumber)
  // optional string number = 1;
  if (this->number().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->number().data(), this->number().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ecma_protoc.Simu.PhoneNumber.number");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->number(), target);
  }

  // optional .ecma_protoc.Simu.PhoneType type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ecma_protoc.Simu.PhoneNumber)
  return target;
}

int Simu_PhoneNumber::ByteSize() const {
  int total_size = 0;

  // optional string number = 1;
  if (this->number().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->number());
  }

  // optional .ecma_protoc.Simu.PhoneType type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Simu_PhoneNumber::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Simu_PhoneNumber* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Simu_PhoneNumber>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Simu_PhoneNumber::MergeFrom(const Simu_PhoneNumber& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.number().size() > 0) {

    number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.number_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void Simu_PhoneNumber::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Simu_PhoneNumber::CopyFrom(const Simu_PhoneNumber& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Simu_PhoneNumber::IsInitialized() const {

  return true;
}

void Simu_PhoneNumber::Swap(Simu_PhoneNumber* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Simu_PhoneNumber::InternalSwap(Simu_PhoneNumber* other) {
  number_.Swap(&other->number_);
  std::swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Simu_PhoneNumber::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Simu_PhoneNumber_descriptor_;
  metadata.reflection = Simu_PhoneNumber_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Simu::kNameFieldNumber;
const int Simu::kIdFieldNumber;
const int Simu::kEmailFieldNumber;
const int Simu::kPhonesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Simu::Simu()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ecma_protoc.Simu)
}

void Simu::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Simu::Simu(const Simu& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ecma_protoc.Simu)
}

void Simu::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0;
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Simu::~Simu() {
  // @@protoc_insertion_point(destructor:ecma_protoc.Simu)
  SharedDtor();
}

void Simu::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Simu::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Simu::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Simu_descriptor_;
}

const Simu& Simu::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_results_5fformat_2eproto();
  return *default_instance_;
}

Simu* Simu::default_instance_ = NULL;

Simu* Simu::New(::google::protobuf::Arena* arena) const {
  Simu* n = new Simu;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Simu::Clear() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0;
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phones_.Clear();
}

bool Simu::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ecma_protoc.Simu)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ecma_protoc.Simu.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_id;
        break;
      }

      // optional int32 id = 2;
      case 2: {
        if (tag == 16) {
         parse_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_email;
        break;
      }

      // optional string email = 3;
      case 3: {
        if (tag == 26) {
         parse_email:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->email().data(), this->email().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ecma_protoc.Simu.email"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_phones;
        break;
      }

      // repeated .ecma_protoc.Simu.PhoneNumber phones = 4;
      case 4: {
        if (tag == 34) {
         parse_phones:
          DO_(input->IncrementRecursionDepth());
         parse_loop_phones:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_phones()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_phones;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ecma_protoc.Simu)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ecma_protoc.Simu)
  return false;
#undef DO_
}

void Simu::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ecma_protoc.Simu)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ecma_protoc.Simu.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional int32 id = 2;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->id(), output);
  }

  // optional string email = 3;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ecma_protoc.Simu.email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->email(), output);
  }

  // repeated .ecma_protoc.Simu.PhoneNumber phones = 4;
  for (unsigned int i = 0, n = this->phones_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->phones(i), output);
  }

  // @@protoc_insertion_point(serialize_end:ecma_protoc.Simu)
}

::google::protobuf::uint8* Simu::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ecma_protoc.Simu)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ecma_protoc.Simu.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional int32 id = 2;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->id(), target);
  }

  // optional string email = 3;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ecma_protoc.Simu.email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->email(), target);
  }

  // repeated .ecma_protoc.Simu.PhoneNumber phones = 4;
  for (unsigned int i = 0, n = this->phones_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->phones(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ecma_protoc.Simu)
  return target;
}

int Simu::ByteSize() const {
  int total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional int32 id = 2;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // optional string email = 3;
  if (this->email().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->email());
  }

  // repeated .ecma_protoc.Simu.PhoneNumber phones = 4;
  total_size += 1 * this->phones_size();
  for (int i = 0; i < this->phones_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->phones(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Simu::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Simu* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Simu>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Simu::MergeFrom(const Simu& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  phones_.MergeFrom(from.phones_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.email().size() > 0) {

    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
}

void Simu::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Simu::CopyFrom(const Simu& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Simu::IsInitialized() const {

  return true;
}

void Simu::Swap(Simu* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Simu::InternalSwap(Simu* other) {
  name_.Swap(&other->name_);
  std::swap(id_, other->id_);
  email_.Swap(&other->email_);
  phones_.UnsafeArenaSwap(&other->phones_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Simu::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Simu_descriptor_;
  metadata.reflection = Simu_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Simu_PhoneNumber

// optional string number = 1;
void Simu_PhoneNumber::clear_number() {
  number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Simu_PhoneNumber::number() const {
  // @@protoc_insertion_point(field_get:ecma_protoc.Simu.PhoneNumber.number)
  return number_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Simu_PhoneNumber::set_number(const ::std::string& value) {
  
  number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ecma_protoc.Simu.PhoneNumber.number)
}
 void Simu_PhoneNumber::set_number(const char* value) {
  
  number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ecma_protoc.Simu.PhoneNumber.number)
}
 void Simu_PhoneNumber::set_number(const char* value, size_t size) {
  
  number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ecma_protoc.Simu.PhoneNumber.number)
}
 ::std::string* Simu_PhoneNumber::mutable_number() {
  
  // @@protoc_insertion_point(field_mutable:ecma_protoc.Simu.PhoneNumber.number)
  return number_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Simu_PhoneNumber::release_number() {
  
  return number_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Simu_PhoneNumber::set_allocated_number(::std::string* number) {
  if (number != NULL) {
    
  } else {
    
  }
  number_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), number);
  // @@protoc_insertion_point(field_set_allocated:ecma_protoc.Simu.PhoneNumber.number)
}

// optional .ecma_protoc.Simu.PhoneType type = 2;
void Simu_PhoneNumber::clear_type() {
  type_ = 0;
}
 ::ecma_protoc::Simu_PhoneType Simu_PhoneNumber::type() const {
  // @@protoc_insertion_point(field_get:ecma_protoc.Simu.PhoneNumber.type)
  return static_cast< ::ecma_protoc::Simu_PhoneType >(type_);
}
 void Simu_PhoneNumber::set_type(::ecma_protoc::Simu_PhoneType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:ecma_protoc.Simu.PhoneNumber.type)
}

// -------------------------------------------------------------------

// Simu

// optional string name = 1;
void Simu::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Simu::name() const {
  // @@protoc_insertion_point(field_get:ecma_protoc.Simu.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Simu::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ecma_protoc.Simu.name)
}
 void Simu::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ecma_protoc.Simu.name)
}
 void Simu::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ecma_protoc.Simu.name)
}
 ::std::string* Simu::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ecma_protoc.Simu.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Simu::release_name() {
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Simu::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ecma_protoc.Simu.name)
}

// optional int32 id = 2;
void Simu::clear_id() {
  id_ = 0;
}
 ::google::protobuf::int32 Simu::id() const {
  // @@protoc_insertion_point(field_get:ecma_protoc.Simu.id)
  return id_;
}
 void Simu::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:ecma_protoc.Simu.id)
}

// optional string email = 3;
void Simu::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Simu::email() const {
  // @@protoc_insertion_point(field_get:ecma_protoc.Simu.email)
  return email_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Simu::set_email(const ::std::string& value) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ecma_protoc.Simu.email)
}
 void Simu::set_email(const char* value) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ecma_protoc.Simu.email)
}
 void Simu::set_email(const char* value, size_t size) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ecma_protoc.Simu.email)
}
 ::std::string* Simu::mutable_email() {
  
  // @@protoc_insertion_point(field_mutable:ecma_protoc.Simu.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Simu::release_email() {
  
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Simu::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    
  } else {
    
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:ecma_protoc.Simu.email)
}

// repeated .ecma_protoc.Simu.PhoneNumber phones = 4;
int Simu::phones_size() const {
  return phones_.size();
}
void Simu::clear_phones() {
  phones_.Clear();
}
const ::ecma_protoc::Simu_PhoneNumber& Simu::phones(int index) const {
  // @@protoc_insertion_point(field_get:ecma_protoc.Simu.phones)
  return phones_.Get(index);
}
::ecma_protoc::Simu_PhoneNumber* Simu::mutable_phones(int index) {
  // @@protoc_insertion_point(field_mutable:ecma_protoc.Simu.phones)
  return phones_.Mutable(index);
}
::ecma_protoc::Simu_PhoneNumber* Simu::add_phones() {
  // @@protoc_insertion_point(field_add:ecma_protoc.Simu.phones)
  return phones_.Add();
}
::google::protobuf::RepeatedPtrField< ::ecma_protoc::Simu_PhoneNumber >*
Simu::mutable_phones() {
  // @@protoc_insertion_point(field_mutable_list:ecma_protoc.Simu.phones)
  return &phones_;
}
const ::google::protobuf::RepeatedPtrField< ::ecma_protoc::Simu_PhoneNumber >&
Simu::phones() const {
  // @@protoc_insertion_point(field_list:ecma_protoc.Simu.phones)
  return phones_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Results::kSimuFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Results::Results()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ecma_protoc.Results)
}

void Results::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Results::Results(const Results& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ecma_protoc.Results)
}

void Results::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

Results::~Results() {
  // @@protoc_insertion_point(destructor:ecma_protoc.Results)
  SharedDtor();
}

void Results::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Results::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Results::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Results_descriptor_;
}

const Results& Results::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_results_5fformat_2eproto();
  return *default_instance_;
}

Results* Results::default_instance_ = NULL;

Results* Results::New(::google::protobuf::Arena* arena) const {
  Results* n = new Results;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Results::Clear() {
  simu_.Clear();
}

bool Results::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ecma_protoc.Results)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ecma_protoc.Simu simu = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_simu:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_simu()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_simu;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ecma_protoc.Results)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ecma_protoc.Results)
  return false;
#undef DO_
}

void Results::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ecma_protoc.Results)
  // repeated .ecma_protoc.Simu simu = 1;
  for (unsigned int i = 0, n = this->simu_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->simu(i), output);
  }

  // @@protoc_insertion_point(serialize_end:ecma_protoc.Results)
}

::google::protobuf::uint8* Results::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ecma_protoc.Results)
  // repeated .ecma_protoc.Simu simu = 1;
  for (unsigned int i = 0, n = this->simu_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->simu(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ecma_protoc.Results)
  return target;
}

int Results::ByteSize() const {
  int total_size = 0;

  // repeated .ecma_protoc.Simu simu = 1;
  total_size += 1 * this->simu_size();
  for (int i = 0; i < this->simu_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->simu(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Results::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Results* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Results>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Results::MergeFrom(const Results& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  simu_.MergeFrom(from.simu_);
}

void Results::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Results::CopyFrom(const Results& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Results::IsInitialized() const {

  return true;
}

void Results::Swap(Results* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Results::InternalSwap(Results* other) {
  simu_.UnsafeArenaSwap(&other->simu_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Results::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Results_descriptor_;
  metadata.reflection = Results_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Results

// repeated .ecma_protoc.Simu simu = 1;
int Results::simu_size() const {
  return simu_.size();
}
void Results::clear_simu() {
  simu_.Clear();
}
const ::ecma_protoc::Simu& Results::simu(int index) const {
  // @@protoc_insertion_point(field_get:ecma_protoc.Results.simu)
  return simu_.Get(index);
}
::ecma_protoc::Simu* Results::mutable_simu(int index) {
  // @@protoc_insertion_point(field_mutable:ecma_protoc.Results.simu)
  return simu_.Mutable(index);
}
::ecma_protoc::Simu* Results::add_simu() {
  // @@protoc_insertion_point(field_add:ecma_protoc.Results.simu)
  return simu_.Add();
}
::google::protobuf::RepeatedPtrField< ::ecma_protoc::Simu >*
Results::mutable_simu() {
  // @@protoc_insertion_point(field_mutable_list:ecma_protoc.Results.simu)
  return &simu_;
}
const ::google::protobuf::RepeatedPtrField< ::ecma_protoc::Simu >&
Results::simu() const {
  // @@protoc_insertion_point(field_list:ecma_protoc.Results.simu)
  return simu_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace ecma_protoc

// @@protoc_insertion_point(global_scope)
