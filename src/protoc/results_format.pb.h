// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: results_format.proto

#ifndef PROTOBUF_results_5fformat_2eproto__INCLUDED
#define PROTOBUF_results_5fformat_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace ecma_protoc {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_results_5fformat_2eproto();
void protobuf_AssignDesc_results_5fformat_2eproto();
void protobuf_ShutdownFile_results_5fformat_2eproto();

class Results;
class Simu;
class Simu_LinesSol;

enum Simu_Solver {
  Simu_Solver_STUPID = 0,
  Simu_Solver_FRONTAL = 1,
  Simu_Solver_CONSTRAINT = 2,
  Simu_Solver_GREEDY = 3,
  Simu_Solver_ANNEALING = 4,
  Simu_Solver_Simu_Solver_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Simu_Solver_Simu_Solver_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Simu_Solver_IsValid(int value);
const Simu_Solver Simu_Solver_Solver_MIN = Simu_Solver_STUPID;
const Simu_Solver Simu_Solver_Solver_MAX = Simu_Solver_ANNEALING;
const int Simu_Solver_Solver_ARRAYSIZE = Simu_Solver_Solver_MAX + 1;

const ::google::protobuf::EnumDescriptor* Simu_Solver_descriptor();
inline const ::std::string& Simu_Solver_Name(Simu_Solver value) {
  return ::google::protobuf::internal::NameOfEnum(
    Simu_Solver_descriptor(), value);
}
inline bool Simu_Solver_Parse(
    const ::std::string& name, Simu_Solver* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Simu_Solver>(
    Simu_Solver_descriptor(), name, value);
}
// ===================================================================

class Simu_LinesSol : public ::google::protobuf::Message {
 public:
  Simu_LinesSol();
  virtual ~Simu_LinesSol();

  Simu_LinesSol(const Simu_LinesSol& from);

  inline Simu_LinesSol& operator=(const Simu_LinesSol& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Simu_LinesSol& default_instance();

  void Swap(Simu_LinesSol* other);

  // implements Message ----------------------------------------------

  inline Simu_LinesSol* New() const { return New(NULL); }

  Simu_LinesSol* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Simu_LinesSol& from);
  void MergeFrom(const Simu_LinesSol& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Simu_LinesSol* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bool l = 1;
  int l_size() const;
  void clear_l();
  static const int kLFieldNumber = 1;
  bool l(int index) const;
  void set_l(int index, bool value);
  void add_l(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      l() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_l();

  // @@protoc_insertion_point(class_scope:ecma_protoc.Simu.LinesSol)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedField< bool > l_;
  mutable int _l_cached_byte_size_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_results_5fformat_2eproto();
  friend void protobuf_AssignDesc_results_5fformat_2eproto();
  friend void protobuf_ShutdownFile_results_5fformat_2eproto();

  void InitAsDefaultInstance();
  static Simu_LinesSol* default_instance_;
};
// -------------------------------------------------------------------

class Simu : public ::google::protobuf::Message {
 public:
  Simu();
  virtual ~Simu();

  Simu(const Simu& from);

  inline Simu& operator=(const Simu& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Simu& default_instance();

  void Swap(Simu* other);

  // implements Message ----------------------------------------------

  inline Simu* New() const { return New(NULL); }

  Simu* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Simu& from);
  void MergeFrom(const Simu& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Simu* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Simu_LinesSol LinesSol;

  typedef Simu_Solver Solver;
  static const Solver STUPID = Simu_Solver_STUPID;
  static const Solver FRONTAL = Simu_Solver_FRONTAL;
  static const Solver CONSTRAINT = Simu_Solver_CONSTRAINT;
  static const Solver GREEDY = Simu_Solver_GREEDY;
  static const Solver ANNEALING = Simu_Solver_ANNEALING;
  static inline bool Solver_IsValid(int value) {
    return Simu_Solver_IsValid(value);
  }
  static const Solver Solver_MIN =
    Simu_Solver_Solver_MIN;
  static const Solver Solver_MAX =
    Simu_Solver_Solver_MAX;
  static const int Solver_ARRAYSIZE =
    Simu_Solver_Solver_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Solver_descriptor() {
    return Simu_Solver_descriptor();
  }
  static inline const ::std::string& Solver_Name(Solver value) {
    return Simu_Solver_Name(value);
  }
  static inline bool Solver_Parse(const ::std::string& name,
      Solver* value) {
    return Simu_Solver_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string instance_name = 1;
  void clear_instance_name();
  static const int kInstanceNameFieldNumber = 1;
  const ::std::string& instance_name() const;
  void set_instance_name(const ::std::string& value);
  void set_instance_name(const char* value);
  void set_instance_name(const char* value, size_t size);
  ::std::string* mutable_instance_name();
  ::std::string* release_instance_name();
  void set_allocated_instance_name(::std::string* instance_name);

  // optional int64 id_time = 2;
  void clear_id_time();
  static const int kIdTimeFieldNumber = 2;
  ::google::protobuf::int64 id_time() const;
  void set_id_time(::google::protobuf::int64 value);

  // optional .ecma_protoc.Simu.Solver solver = 3;
  void clear_solver();
  static const int kSolverFieldNumber = 3;
  ::ecma_protoc::Simu_Solver solver() const;
  void set_solver(::ecma_protoc::Simu_Solver value);

  // optional int32 cost = 4;
  void clear_cost();
  static const int kCostFieldNumber = 4;
  ::google::protobuf::int32 cost() const;
  void set_cost(::google::protobuf::int32 value);

  // optional int32 time = 5;
  void clear_time();
  static const int kTimeFieldNumber = 5;
  ::google::protobuf::int32 time() const;
  void set_time(::google::protobuf::int32 value);

  // repeated .ecma_protoc.Simu.LinesSol x = 6;
  int x_size() const;
  void clear_x();
  static const int kXFieldNumber = 6;
  const ::ecma_protoc::Simu_LinesSol& x(int index) const;
  ::ecma_protoc::Simu_LinesSol* mutable_x(int index);
  ::ecma_protoc::Simu_LinesSol* add_x();
  ::google::protobuf::RepeatedPtrField< ::ecma_protoc::Simu_LinesSol >*
      mutable_x();
  const ::google::protobuf::RepeatedPtrField< ::ecma_protoc::Simu_LinesSol >&
      x() const;

  // @@protoc_insertion_point(class_scope:ecma_protoc.Simu)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr instance_name_;
  ::google::protobuf::int64 id_time_;
  int solver_;
  ::google::protobuf::int32 cost_;
  ::google::protobuf::RepeatedPtrField< ::ecma_protoc::Simu_LinesSol > x_;
  ::google::protobuf::int32 time_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_results_5fformat_2eproto();
  friend void protobuf_AssignDesc_results_5fformat_2eproto();
  friend void protobuf_ShutdownFile_results_5fformat_2eproto();

  void InitAsDefaultInstance();
  static Simu* default_instance_;
};
// -------------------------------------------------------------------

class Results : public ::google::protobuf::Message {
 public:
  Results();
  virtual ~Results();

  Results(const Results& from);

  inline Results& operator=(const Results& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Results& default_instance();

  void Swap(Results* other);

  // implements Message ----------------------------------------------

  inline Results* New() const { return New(NULL); }

  Results* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Results& from);
  void MergeFrom(const Results& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Results* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ecma_protoc.Simu simu = 1;
  int simu_size() const;
  void clear_simu();
  static const int kSimuFieldNumber = 1;
  const ::ecma_protoc::Simu& simu(int index) const;
  ::ecma_protoc::Simu* mutable_simu(int index);
  ::ecma_protoc::Simu* add_simu();
  ::google::protobuf::RepeatedPtrField< ::ecma_protoc::Simu >*
      mutable_simu();
  const ::google::protobuf::RepeatedPtrField< ::ecma_protoc::Simu >&
      simu() const;

  // @@protoc_insertion_point(class_scope:ecma_protoc.Results)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::ecma_protoc::Simu > simu_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_results_5fformat_2eproto();
  friend void protobuf_AssignDesc_results_5fformat_2eproto();
  friend void protobuf_ShutdownFile_results_5fformat_2eproto();

  void InitAsDefaultInstance();
  static Results* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Simu_LinesSol

// repeated bool l = 1;
inline int Simu_LinesSol::l_size() const {
  return l_.size();
}
inline void Simu_LinesSol::clear_l() {
  l_.Clear();
}
inline bool Simu_LinesSol::l(int index) const {
  // @@protoc_insertion_point(field_get:ecma_protoc.Simu.LinesSol.l)
  return l_.Get(index);
}
inline void Simu_LinesSol::set_l(int index, bool value) {
  l_.Set(index, value);
  // @@protoc_insertion_point(field_set:ecma_protoc.Simu.LinesSol.l)
}
inline void Simu_LinesSol::add_l(bool value) {
  l_.Add(value);
  // @@protoc_insertion_point(field_add:ecma_protoc.Simu.LinesSol.l)
}
inline const ::google::protobuf::RepeatedField< bool >&
Simu_LinesSol::l() const {
  // @@protoc_insertion_point(field_list:ecma_protoc.Simu.LinesSol.l)
  return l_;
}
inline ::google::protobuf::RepeatedField< bool >*
Simu_LinesSol::mutable_l() {
  // @@protoc_insertion_point(field_mutable_list:ecma_protoc.Simu.LinesSol.l)
  return &l_;
}

// -------------------------------------------------------------------

// Simu

// optional string instance_name = 1;
inline void Simu::clear_instance_name() {
  instance_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Simu::instance_name() const {
  // @@protoc_insertion_point(field_get:ecma_protoc.Simu.instance_name)
  return instance_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Simu::set_instance_name(const ::std::string& value) {
  
  instance_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ecma_protoc.Simu.instance_name)
}
inline void Simu::set_instance_name(const char* value) {
  
  instance_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ecma_protoc.Simu.instance_name)
}
inline void Simu::set_instance_name(const char* value, size_t size) {
  
  instance_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ecma_protoc.Simu.instance_name)
}
inline ::std::string* Simu::mutable_instance_name() {
  
  // @@protoc_insertion_point(field_mutable:ecma_protoc.Simu.instance_name)
  return instance_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Simu::release_instance_name() {
  
  return instance_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Simu::set_allocated_instance_name(::std::string* instance_name) {
  if (instance_name != NULL) {
    
  } else {
    
  }
  instance_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instance_name);
  // @@protoc_insertion_point(field_set_allocated:ecma_protoc.Simu.instance_name)
}

// optional int64 id_time = 2;
inline void Simu::clear_id_time() {
  id_time_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Simu::id_time() const {
  // @@protoc_insertion_point(field_get:ecma_protoc.Simu.id_time)
  return id_time_;
}
inline void Simu::set_id_time(::google::protobuf::int64 value) {
  
  id_time_ = value;
  // @@protoc_insertion_point(field_set:ecma_protoc.Simu.id_time)
}

// optional .ecma_protoc.Simu.Solver solver = 3;
inline void Simu::clear_solver() {
  solver_ = 0;
}
inline ::ecma_protoc::Simu_Solver Simu::solver() const {
  // @@protoc_insertion_point(field_get:ecma_protoc.Simu.solver)
  return static_cast< ::ecma_protoc::Simu_Solver >(solver_);
}
inline void Simu::set_solver(::ecma_protoc::Simu_Solver value) {
  
  solver_ = value;
  // @@protoc_insertion_point(field_set:ecma_protoc.Simu.solver)
}

// optional int32 cost = 4;
inline void Simu::clear_cost() {
  cost_ = 0;
}
inline ::google::protobuf::int32 Simu::cost() const {
  // @@protoc_insertion_point(field_get:ecma_protoc.Simu.cost)
  return cost_;
}
inline void Simu::set_cost(::google::protobuf::int32 value) {
  
  cost_ = value;
  // @@protoc_insertion_point(field_set:ecma_protoc.Simu.cost)
}

// optional int32 time = 5;
inline void Simu::clear_time() {
  time_ = 0;
}
inline ::google::protobuf::int32 Simu::time() const {
  // @@protoc_insertion_point(field_get:ecma_protoc.Simu.time)
  return time_;
}
inline void Simu::set_time(::google::protobuf::int32 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:ecma_protoc.Simu.time)
}

// repeated .ecma_protoc.Simu.LinesSol x = 6;
inline int Simu::x_size() const {
  return x_.size();
}
inline void Simu::clear_x() {
  x_.Clear();
}
inline const ::ecma_protoc::Simu_LinesSol& Simu::x(int index) const {
  // @@protoc_insertion_point(field_get:ecma_protoc.Simu.x)
  return x_.Get(index);
}
inline ::ecma_protoc::Simu_LinesSol* Simu::mutable_x(int index) {
  // @@protoc_insertion_point(field_mutable:ecma_protoc.Simu.x)
  return x_.Mutable(index);
}
inline ::ecma_protoc::Simu_LinesSol* Simu::add_x() {
  // @@protoc_insertion_point(field_add:ecma_protoc.Simu.x)
  return x_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ecma_protoc::Simu_LinesSol >*
Simu::mutable_x() {
  // @@protoc_insertion_point(field_mutable_list:ecma_protoc.Simu.x)
  return &x_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ecma_protoc::Simu_LinesSol >&
Simu::x() const {
  // @@protoc_insertion_point(field_list:ecma_protoc.Simu.x)
  return x_;
}

// -------------------------------------------------------------------

// Results

// repeated .ecma_protoc.Simu simu = 1;
inline int Results::simu_size() const {
  return simu_.size();
}
inline void Results::clear_simu() {
  simu_.Clear();
}
inline const ::ecma_protoc::Simu& Results::simu(int index) const {
  // @@protoc_insertion_point(field_get:ecma_protoc.Results.simu)
  return simu_.Get(index);
}
inline ::ecma_protoc::Simu* Results::mutable_simu(int index) {
  // @@protoc_insertion_point(field_mutable:ecma_protoc.Results.simu)
  return simu_.Mutable(index);
}
inline ::ecma_protoc::Simu* Results::add_simu() {
  // @@protoc_insertion_point(field_add:ecma_protoc.Results.simu)
  return simu_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ecma_protoc::Simu >*
Results::mutable_simu() {
  // @@protoc_insertion_point(field_mutable_list:ecma_protoc.Results.simu)
  return &simu_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ecma_protoc::Simu >&
Results::simu() const {
  // @@protoc_insertion_point(field_list:ecma_protoc.Results.simu)
  return simu_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace ecma_protoc

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::ecma_protoc::Simu_Solver> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ecma_protoc::Simu_Solver>() {
  return ::ecma_protoc::Simu_Solver_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_results_5fformat_2eproto__INCLUDED
